// Pins definieren
//Alle comments könnt ihr weglassen also wo hinter dem befehl in grau geschrieben ist und mit "//" beginnt
//falls er fragen zu dem code stellt bool ist ein anderer Variablentyp für int der nur 0 oder 1 beinhalten kann also wahr oder falsch.

const int ldrPin = A0;       // Pin, an dem der LDR angeschlossen ist
const int buttonPin = 7;    // Pin, an dem der Button angeschlossen ist
const int ledPin = 12;      // Pin, an dem die LED angeschlossen ist

// Variablen für den Zustand des Buttons und die Steuerung
bool ldrEnabled = true;     // Steuerung, ob der LDR aktiv ist
bool lastButtonState = LOW; // Vorheriger Buttonzustand
bool ledState = LOW;        // Aktueller LED-Zustand
bool manualOverride = false; // Manuelle Steuerung der LED

void setup() {
  pinMode(buttonPin, INPUT_PULLUP); // Button als Eingang mit Pullup-Widerstand
  pinMode(ledPin, OUTPUT);          // LED als Ausgang
  Serial.begin(9600);              // Serielle Kommunikation starten (Debugging)
}

void loop() {
  // Den aktuellen Buttonzustand lesen
  bool buttonState = digitalRead(buttonPin); //verwendung von bool für systemabsturz
  // Prüfen, ob der Button gedrückt wurde (Flankenerkennung falls ohm pwm)
  if (buttonState == LOW && lastButtonState == HIGH) {
    if (manualOverride) {
      // Wenn manuell gesteuert wird, zurück zur LDR-Steuerung wechseln
      manualOverride = false;
      ldrEnabled = true;
      Serial.println("Zurück zur LDR-Steuerung");
    } else {
      // Manuelle Steuerung aktivieren und LED-Zustand umschalten
      manualOverride = true;
      ldrEnabled = false;
      ledState = !ledState;
      Serial.println("Manuelle Steuerung aktiv");
    }
  }
  lastButtonState = buttonState; // Den Buttonzustand speichern

  // Wenn der LDR aktiviert ist, die Helligkeit prüfen
  if (ldrEnabled) {
    int ldrValue = analogRead(ldrPin); // LDR-Wert lesen
    Serial.print("LDR Wert: ");
    Serial.println(ldrValue);

    // Wenn es dunkel ist (Schwellenwert anpassen), LED einschalten
    if (ldrValue < 60) {
      ledState = HIGH;
    } else {
      ledState = LOW;
    }
  }

  // LED Zustand setzen
  digitalWrite(ledPin, ledState);

  delay(100); // Kleiner Delay für Stabilität
}

